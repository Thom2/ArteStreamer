<Window x:Class="arte_7.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:arte_7"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" d:DataContext="{d:DesignData Source=SampleViewModel.xaml}"
    Title="Arte+7 Streamer" Height="563" Width="790" MinWidth="790" MinHeight="400" Background="#FF9E9E9E" Foreground="White">
    
    <Window.Resources>
        <LinearGradientBrush x:Key="OpacGradient" StartPoint="0,0.5" EndPoint="1,0.5" >
            <GradientStop Offset="0.0" Color="#00000000" />
            <GradientStop Offset="1.0" Color="#FF000000" />
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="OpacGradient2" StartPoint="0,0.5" EndPoint="1,0.5" >
            <GradientStop Offset="0.0" Color="#00000000" />
            <GradientStop Offset="1.0" Color="#60000000" />
        </LinearGradientBrush>

        <Style x:Key="ImageOpacStyle" TargetType="Image">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="OpacityMask" Value="{StaticResource OpacGradient2}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Image Grid.Row="0" Source="{Binding Thumbnail}" Margin="0" Stretch="Uniform"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid Background="Transparent">
                            <TextBlock x:Name="teaserText" Grid.Row="0" Text="{Binding Path=TeaserText}" Margin="3" TextWrapping="Wrap" Visibility="Hidden" />
                            <ContentPresenter/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger  Property="IsMouseOver" Value="True">
                                <Setter Property="Visibility"
                                        TargetName="teaserText"
                                        Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        -->
        
        <DataTemplate x:Key="VideoGridTemplate">

            <Grid Margin="10" Width="220" Height="180" Background="{x:Null}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                    <TextBlock Text="{Binding Path=Title}" TextWrapping="NoWrap" FontWeight="Bold" FontSize="18" Width="400" HorizontalAlignment="Left" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=DisplayedAt}" Margin="10,0,0,0" />
                        <TextBlock Text="{Binding Path=Duration}" Margin="10,0,0,0" HorizontalAlignment="Right" />
                    </StackPanel>

                    <TextBlock Text="{Binding Path=TeaserText}" Margin="10,10,0,10" TextWrapping="Wrap" Width="400" HorizontalAlignment="Left" />

                </StackPanel-->
                
                <TextBlock Name="teaserText" Grid.Row="0" Text="{Binding Path=TeaserText}" Margin="0" TextWrapping="Wrap" VerticalAlignment="Stretch" FontSize="14" Foreground="Black" Background="White" Padding="5,5,5,0" />
                <Image Name="image"  Grid.Row="0" Source="{Binding Thumbnail}" Margin="0" Stretch="Uniform" Style="{StaticResource ImageOpacStyle}"/>

                <TextBlock Grid.Row="1" Text="{Binding Path=Title}" TextWrapping="Wrap" FontWeight="Bold" FontSize="14" HorizontalAlignment="Stretch" Margin="0,0" Foreground="White" Background="Black" />
                <StackPanel Grid.Row="2" Orientation="Horizontal" Background="Black" OpacityMask="Black">
                    <TextBlock Text="{Binding Path=DisplayedAt}" Margin="0,0" Foreground="White" />
                    <TextBlock Text="{Binding Path=Duration}" Margin="0,0" HorizontalAlignment="Right" Width="150" TextAlignment="Right" Foreground="White" />
                </StackPanel>
             </Grid>
        </DataTemplate>

        <ObjectDataProvider ObjectType="{x:Type local:ViewModelSampleData}" x:Key="DesignTime_DataSource" d:IsDataSource="True"/>
        
    </Window.Resources>
    
    <!--Grid d:DataContext="{d:DesignInstance local:ViewModelSampleData, IsDesignTimeCreatable=True}"-->
    <!--Grid d:DataContext="{StaticResource DesignTime_DataSource}"-->
    
    <!--
    
    -->
    <Grid Margin="4,0,2,0">
        <Label Margin="12,0,16,0" Name="labelStatus" Height="52" VerticalAlignment="Bottom"></Label>
        <Button Height="23" HorizontalAlignment="Left" Margin="99,0,0,63" Name="buttonReload" VerticalAlignment="Bottom" Width="75" Click="buttonReload_Click">Reload</Button>
        <ListView 
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding Videos}" 
            ItemTemplate="{StaticResource VideoGridTemplate}"
            Margin="10,28,10,91" 
            Name="listBox1" BorderThickness="0" SelectionChanged="listBox1_SelectionChanged" AlternationCount="2" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Background="Black">
            
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"
    				   ItemWidth="{Binding (ListView.View).ItemWidth, RelativeSource={RelativeSource AncestorType=ListView}}"
    				   MinWidth="{Binding ItemWidth, RelativeSource={RelativeSource Self}}"
    				   ItemHeight="{Binding (ListView.View).ItemHeight, RelativeSource={RelativeSource AncestorType=ListView}}" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>
        
        <Button Height="23" Margin="12,0,0,63" Name="buttonDownload" VerticalAlignment="Bottom" Click="buttonDownload_Click" HorizontalAlignment="Left" Width="75">Download</Button>
        <Button Height="23" HorizontalAlignment="Right" Margin="0,0,16,63" Name="buttonClose" VerticalAlignment="Bottom" Width="75" Click="buttonClose_Click">Close</Button>
        <Button Height="23" Margin="187,0,0,63" Name="buttonOptions" VerticalAlignment="Bottom" Click="buttonOptions_Click" HorizontalAlignment="Left" Width="83">Options</Button>
        <Button Content="Load Next Page" HorizontalAlignment="Left" Margin="314,0,0,63" Name="buttonLoadNextPage" Width="98" Click="buttonLoadNextPage_Click" Height="23" VerticalAlignment="Bottom"/>
        <Button Content="Load All" HorizontalAlignment="Left" Margin="417,0,0,63" Name="buttonLoadAll" Width="75" Click="buttonLoadAll_Click" Height="23" VerticalAlignment="Bottom"/>
        <ComboBox ItemsSource="{Binding FilterDates}" Height="23" HorizontalAlignment="Left" Margin="12,0,0,0" Name="comboBoxFilterDate" VerticalAlignment="Top" Width="120" SelectionChanged="comboBoxFilterDate_SelectionChanged"/>
    </Grid>
</Window>
